"""
Django settings for zt_app project.

Generated by 'django-admin startproject' using Django 2.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import environ

env = environ.Env()

root_path = environ.Path(__file__) - 2
BASE_DIR = root_path()

### Following is a hack for PyCharm
env.read_env(root_path('../.env'))
###

ZT_REACT_DIR = root_path('zt_react')
ZT_REACT_DIST_DIR = root_path('zt_react/dist')

DJANGO_ENV = env('DJANGO_ENV', default='prod')
assert DJANGO_ENV in ['dev', 'prod', 'test', 'staging', 'poc']

# -----------------------------------------------------------------------------
# PROJECT CONFIGURATION
# -----------------------------------------------------------------------------
SECRET_KEY = env('DJANGO_SECRET_KEY')
DEBUG = env.bool('DJANGO_DEBUG', default=False)
ALLOWED_HOSTS = env.list('DJANGO_ALLOWED_HOSTS',
                         default=['127.0.0.1', 'localhost'])
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True
SITE_ID = 1
ROOT_URLCONF = 'conf.urls'
WSGI_APPLICATION = 'conf.wsgi.application'
DATABASES = {'default': env.db('DJANGO_DATABASE_URL')}

# -----------------------------------------------------------------------------
# EMAIL
# -----------------------------------------------------------------------------
DEFAULT_FROM_EMAIL = env(
    'DJANGO_DEFAULT_FROM_EMAIL',
    default='info@zarathustratech.com')
EMAIL_BACKEND = env(
    'DJANGO_EMAIL_BACKEND',
    default='django.core.mail.backends.smtp.EmailBackend')
SENDGRID_API_KEY = env('SENDGRID_API_KEY', default=None)

# -----------------------------------------------------------------------------
# ACCOUNT
# -----------------------------------------------------------------------------
ACCOUNT_EMAIL_VERIFICATION = 'mandatory'
ACCOUNT_EMAIL_SUBJECT_PREFIX = ''
ACCOUNT_CONFIRM_EMAIL_ON_GET = True
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True
LOGIN_REDIRECT_URL = '/app/'

# -----------------------------------------------------------------------------
# APPLICATIONS
# -----------------------------------------------------------------------------
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',

    'webpack_loader',
    'sass_processor',

    'nested_admin',

    'rest_framework',
    'rest_framework.authtoken',
    'rest_auth',
    'allauth',
    'allauth.account',
    'rest_auth.registration',
    'storages',
    'corsheaders',
    'django_celery_results',

    'apps.accounts',
    'apps.portfolio',
    'apps.web',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# -----------------------------------------------------------------------------
# AUTHENTICATION & SECURITY
# -----------------------------------------------------------------------------
AUTH_USER_MODEL = 'accounts.Account'

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
)

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', },  # noqa
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', },  # noqa
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', },  # noqa
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', },  # noqa
]

ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_AUTHENTICATION_METHOD = 'email'
REST_AUTH_REGISTER_SERIALIZERS = {
    'REGISTER_SERIALIZER': 'apps.accounts.serializers.RegisterAccountSerializer',  # noqa
}

CORS_ORIGIN_WHITELIST = (
    'nplxplatform.com',
    'zarathustratech.com',
    'digitaloceanspaces.com',
    'ams3.digitaloceanspaces.com',
    'zt-space-staging.ams3.digitaloceanspaces.com',
    '127.0.0.1:8000',
    'localhost:8000',
)

# -----------------------------------------------------------------------------
# ASSETS AND FILES
# -----------------------------------------------------------------------------
MEDIA_URL = env('DJANGO_MEDIA_URL', default='/media/')
MEDIA_ROOT = env('DJANGO_MEDIA_ROOT', default=os.path.join(BASE_DIR, 'media'))
STATIC_URL = env('DJANGO_STATIC_URL', default='/static/')
STATIC_ROOT = env('DJANGO_STATIC_ROOT', default=os.path.join(BASE_DIR, 'public'))
DEFAULT_FILE_STORAGE = env(
    'DEFAULT_FILE_STORAGE',
    default='django.core.files.storage.FileSystemStorage')

STATICFILES_STORAGE = env(
    'STATICFILES_STORAGE',
    default='django.contrib.staticfiles.storage.StaticFilesStorage')
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'assets'),
    ('zt_react', ZT_REACT_DIST_DIR),
)

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'sass_processor.finders.CssFinder',
]

AWS_ACCESS_KEY_ID = env('AWS_ACCESS_KEY_ID', default=None)
AWS_SECRET_ACCESS_KEY = env('AWS_SECRET_ACCESS_KEY', default=None)
AWS_STORAGE_BUCKET_NAME = env('AWS_STORAGE_BUCKET_NAME', default=None)
AWS_S3_ENDPOINT_URL = env('AWS_S3_ENDPOINT_URL', default=None)
AWS_S3_OBJECT_PARAMETERS = {
    'CacheControl': 'max-age=31536000',
}
AWS_DEFAULT_ACL = 'public-read'

SASS_PROCESSOR_AUTO_INCLUDE = False
SASS_PRECISION = 8
SASS_PROCESSOR_ENABLED = False if DJANGO_ENV in ['prod', 'staging'] else True
SASS_PROCESSOR_ROOT = root_path('assets')  # STATIC_ROOT
stats_filename = 'webpack-stats.%s.json' % DJANGO_ENV
WEBPACK_LOADER = {
    'DEFAULT': {
        'CACHE': False,
        'BUNDLE_DIR_NAME': 'zt_react/',  # must end with slash
        'STATS_FILE': os.path.join(ZT_REACT_DIR, stats_filename),
        'POLL_INTERVAL': 0.1,
        'TIMEOUT': None,
        'IGNORE': ['.+\.hot-update.js', '.+\.map']
    }
}

# -----------------------------------------------------------------------------
# DJANGO REST FRAMEWORK
# -----------------------------------------------------------------------------
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',  # noqa
    'PAGE_SIZE': 100
}

# -----------------------------------------------------------------------------
# DEBUG TOOBAR
# -----------------------------------------------------------------------------
DEBUG_TOOLBAR = env.bool('DJANGO_DEBUG_TOOLBAR', default=False)
if DEBUG_TOOLBAR:
    INSTALLED_APPS += [
        'debug_toolbar',
    ]

    MIDDLEWARE += [
        'debug_toolbar.middleware.DebugToolbarMiddleware',
    ]

    INTERNAL_IPS = env('DJANGO_INTERNAL_IPS', default='127.0.0.1:8000')

# -----------------------------------------------------------------------------
# LOGGING
# -----------------------------------------------------------------------------
DJANGO_LOG_PATH = env('DJANGO_LOG_PATH', default='/tmp')
LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'root': {
        'level': 'INFO',
        'handlers': ['console'],
    },
    'formatters': {
        'standard': {
            'format': '[%(levelname)7s] %(asctime)s  %(name)20s %(lineno)3d | %(message)s',

        },
        'simple': {
            'format': '[%(asctime)s] %(message)s',
        },
    },
    'handlers': {
        'log_file': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(DJANGO_LOG_PATH, 'request.log'),
            'maxBytes': 1024 * 1024 * 15,  # 15MB
            'backupCount': 10,
            'formatter': 'standard',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'standard',
        }
    },
    'loggers': {
        'django.request': {
            'handlers': ['log_file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
    }
}
